-------------------
-- DELETE DATABASE
-------------------
DROP TABLE USER_SCOUT IF EXISTS;
DROP TABLE AUTHORITIES IF EXISTS;
DROP TABLE USERS IF EXISTS;
DROP TABLE SCOUT IF EXISTS;
DROP TABLE SPECIALIST IF EXISTS;
DROP TABLE SCOUT_TYPE IF EXISTS;
DROP TABLE ABILITY_LEVEL IF EXISTS;
DROP TABLE POSITION_RATING IF EXISTS;
DROP TABLE PLAYER_DETAIL IF EXISTS;
DROP TABLE COMBINATION IF EXISTS;
DROP TABLE SKILL IF EXISTS;
DROP TABLE TEAM IF EXISTS;
DROP TABLE LEAGUE IF EXISTS;
DROP TABLE PLAYING_STYLE IF EXISTS;
DROP TABLE FIELDPOSITION IF EXISTS;
DROP TABLE PLAYER_SKILL IF EXISTS;
DROP TABLE PATCH IF EXISTS;
DROP TABLE PLAYER IF EXISTS;
DROP TABLE NATIONALITY IF EXISTS;
DROP TABLE REGION IF EXISTS;
--
DROP SEQUENCE USERS_SEQUENCE IF EXISTS;
DROP SEQUENCE AUTHORITIES_SEQUENCE IF EXISTS;
DROP SEQUENCE SCOUT_SEQUENCE IF EXISTS;
DROP SEQUENCE USER_SCOUT_SEQUENCE IF EXISTS;
DROP SEQUENCE SPECIALIST_SEQUENCE IF EXISTS;
DROP SEQUENCE PATCH_SEQUENCE IF EXISTS;
DROP SEQUENCE PLAYER_SEQUENCE IF EXISTS;
DROP SEQUENCE COMBINATION_SEQUENCE IF EXISTS;
DROP SEQUENCE NATIONALITY_SEQUENCE IF EXISTS;
DROP SEQUENCE TEAM_SEQUENCE IF EXISTS;

------------------
-- CREATE DATABASE
------------------- 
CREATE SEQUENCE USERS_SEQUENCE START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE AUTHORITIES_SEQUENCE START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE SCOUT_SEQUENCE START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE USER_SCOUT_SEQUENCE START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE SPECIALIST_SEQUENCE START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE PATCH_SEQUENCE START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE PLAYER_SEQUENCE START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE COMBINATION_SEQUENCE START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE NATIONALITY_SEQUENCE START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE TEAM_SEQUENCE START WITH 1 INCREMENT BY 1;

--
CREATE TABLE PATCH(
	id INTEGER GENERATED BY DEFAULT AS SEQUENCE PATCH_SEQUENCE PRIMARY KEY,
	pesYear INTEGER NOT NULL,
	datapack INTEGER NOT NULL,
	version INTEGER NOT NULL,
	subversion INTEGER NOT NULL
);
--
CREATE TABLE REGION(
	id INTEGER PRIMARY KEY,
	name VARCHAR(50)
);
--
CREATE TABLE NATIONALITY(
	id INTEGER GENERATED BY DEFAULT AS SEQUENCE NATIONALITY_SEQUENCE PRIMARY KEY,
	name VARCHAR(50),
	regionId INTEGER NOT NULL,
	FOREIGN KEY (regionId) REFERENCES REGION(id)
);
--
CREATE TABLE PLAYER(
	id INTEGER GENERATED BY DEFAULT AS SEQUENCE PLAYER_SEQUENCE PRIMARY KEY,	
	pesDbId INTEGER,
	name varchar(50),
	nationalityId INTEGER NOT NULL,
	FOREIGN KEY (nationalityId) REFERENCES NATIONALITY(id)
);
--
CREATE TABLE FIELDPOSITION(
	id INTEGER PRIMARY KEY,		
	code Character(3) NOT NULL,
	description VARCHAR(20)
);
--
CREATE TABLE PLAYING_STYLE(
	id INTEGER PRIMARY KEY,
	name VARCHAR(50) NOT NULL,
	description VARCHAR(50)
);
--
CREATE TABLE SKILL(
	id INTEGER PRIMARY KEY,
	name VARCHAR(50),
	description VARCHAR(100)
);
--
CREATE TABLE LEAGUE(
	id INTEGER PRIMARY KEY,
	name VARCHAR(50)
);
--
CREATE TABLE TEAM(
	id INTEGER GENERATED BY DEFAULT AS SEQUENCE TEAM_SEQUENCE PRIMARY KEY,
	name VARCHAR(50),
	leagueId INTEGER,
	FOREIGN KEY(leagueId) REFERENCES LEAGUE(id) 
);
--
CREATE TABLE PLAYER_DETAIL(
	patchId INTEGER NOT NULL,
	playerId INTEGER NOT NULL,	
	squatNumber INTEGER,	
	height INTEGER,
	weight INTEGER,
	age INTEGER,
	foot varchar(20),
	condition Character(1),
	rating INTEGER,
	positionId INTEGER,	
	teamId INTEGER,	
	playingStyleId INTEGER,
	FOREIGN KEY (patchId) REFERENCES PATCH(id),
	FOREIGN KEY(playerId) REFERENCES PLAYER(id),
	FOREIGN KEY(playingStyleId) REFERENCES PLAYING_STYLE(id),
	FOREIGN KEY(teamId) REFERENCES TEAM(id),
	FOREIGN KEY(positionId) REFERENCES FIELDPOSITION(id),
	PRIMARY KEY(patchId,playerId)
);
--
CREATE TABLE COMBINATION(
	id INTEGER GENERATED BY DEFAULT AS SEQUENCE COMBINATION_SEQUENCE PRIMARY KEY,
	patchId INTEGER NOT NULL,
	playerId INTEGER NOT NULL,
	chance INTEGER NOT NULL,
	scoutLevel INTEGER NOT NULL,
	scout1 VARCHAR(50),
	scout2 VARCHAR(50),
	scout3 VARCHAR(50),	
	FOREIGN KEY (patchId) REFERENCES PATCH(id),
	FOREIGN KEY(playerId) REFERENCES PLAYER(id)
);
--
CREATE TABLE PLAYER_SKILL(
	patchId INTEGER NOT NULL,
	playerId INTEGER NOT NULL,
	skillId INTEGER NOT NULL,
	PRIMARY KEY (patchId,playerId,skillId),
	FOREIGN KEY(patchId) REFERENCES PATCH(id),
	FOREIGN KEY(playerId) REFERENCES PLAYER
);
--
CREATE TABLE POSITION_RATING(
	patchId INTEGER NOT NULL,
	playerId INTEGER NOT NULL,
	positionId INTEGER NOT NULL,
	rating INTEGER,
	FOREIGN KEY (patchId,playerId) REFERENCES PLAYER_DETAIL(patchId,playerId),
	FOREIGN KEY (positionId) REFERENCES FIELDPOSITION(id),
	PRIMARY KEY(patchId,playerId,positionId)
);
--
CREATE TABLE ABILITY_LEVEL(
	patchId INTEGER NOT NULL,
	playerId INTEGER NOT NULL,
	level INTEGER NOT NULL,	
	offensiveAwareness INTEGER,
	ballControl INTEGER,
	dribbling INTEGER,
	tightPossession INTEGER,
	lowPass INTEGER,
	loftedPass INTEGER,
	finishing INTEGER,
	heading INTEGER,
	placeKicking INTEGER,
	curl INTEGER,
	speed INTEGER,
	acceleration INTEGER,
	kickingPower INTEGER,
	jump INTEGER,	
	physicalContact INTEGER,
	balance INTEGER,
	stamina INTEGER,
	defensiveAwareness INTEGER,
	ballWinning INTEGER,
	aggression INTEGER,
	gkawareness INTEGER,
	gkcatching INTEGER,
	gkclearing INTEGER,
	gkreflexes INTEGER,
	gkreach INTEGER,
	weakFootUsage INTEGER,
	weakFootAccuracy INTEGER,
	form INTEGER,
	injuryResistance INTEGER,
	rating INTEGER,
	FOREIGN KEY (patchId,playerId) REFERENCES PLAYER_DETAIL(patchId,playerId),
	PRIMARY KEY(patchId,playerId,level)
);

CREATE TABLE SCOUT_TYPE(
	id INTEGER PRIMARY KEY,
	name VARCHAR(50) NOT NULL,
	category INTEGER NOT NULL
);

CREATE TABLE SPECIALIST(
	id INTEGER GENERATED BY DEFAULT AS SEQUENCE SPECIALIST_SEQUENCE PRIMARY KEY,
	name VARCHAR(50) NOT NULL,
	scoutTypeId INTEGER NOT NULL,
	FOREIGN KEY (scoutTypeId) REFERENCES SCOUT_TYPE(id)
);

CREATE TABLE USERS(
	id INTEGER GENERATED BY DEFAULT AS SEQUENCE USERS_SEQUENCE PRIMARY KEY,
	email VARCHAR(50) NOT NULL,
	password VARCHAR(60) NOT NULL,
	enabled BOOLEAN NOT NULL
);

CREATE TABLE AUTHORITIES(
	id INTEGER GENERATED BY DEFAULT AS SEQUENCE AUTHORITIES_SEQUENCE PRIMARY KEY,
	userid INTEGER NOT NULL,
	authority VARCHAR(50) NOT NULL,
	FOREIGN KEY (userid) REFERENCES USERS(id)
);

CREATE TABLE SCOUT(
	id INTEGER GENERATED BY DEFAULT AS SEQUENCE SCOUT_SEQUENCE PRIMARY KEY,
	scoutLevel INTEGER NOT NULL,
	specialistId INTEGER,
	FOREIGN KEY (specialistId) REFERENCES SPECIALIST(id)
);

CREATE TABLE USER_SCOUT(
	id INTEGER GENERATED BY DEFAULT AS SEQUENCE USER_SCOUT_SEQUENCE PRIMARY KEY,
	userId INTEGER NOT NULL,
	scoutId INTEGER NOT NULL,
	FOREIGN KEY (userId) REFERENCES USERS(id),
	FOREIGN KEY (scoutId) REFERENCES SCOUT(id)
);
