-------------------
-- DELETE DATABASE
-------------------
--TABLE
DROP TABLE ABILITY_LEVEL IF EXISTS;
DROP TABLE POSITION_RATING IF EXISTS;
DROP TABLE PLAYER_DETAIL IF EXISTS;
DROP TABLE SCOUT IF EXISTS;
DROP TABLE LEAGUE IF EXISTS;
DROP TABLE TEAM IF EXISTS;
DROP TABLE PLAYING_STYLE IF EXISTS;
DROP TABLE FIELDPOSITION IF EXISTS;
DROP TABLE PLAYER IF EXISTS;
DROP TABLE PATCH IF EXISTS;
--SEQUENCES
DROP SEQUENCE PATCH_SEQUENCE IF EXISTS;
DROP SEQUENCE PLAYER_SEQUENCE IF EXISTS;
DROP SEQUENCE SCOUT_SEQUENCE IF EXISTS;
------------------
-- CREATE DATABASE
-------------------
CREATE SEQUENCE PATCH_SEQUENCE START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE PLAYER_SEQUENCE START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE SCOUT_SEQUENCE START WITH 1 INCREMENT BY 1;
--
--PATCH table
CREATE TABLE PATCH(
	id INTEGER GENERATED BY DEFAULT AS SEQUENCE PATCH_SEQUENCE PRIMARY KEY,
	pesYear INTEGER NOT NULL,
	datapack INTEGER NOT NULL,
	version INTEGER NOT NULL,
	subversion INTEGER NOT NULL
);
--
-- PLAYER Table
CREATE TABLE PLAYER(
	id INTEGER GENERATED BY DEFAULT AS SEQUENCE PLAYER_SEQUENCE PRIMARY KEY,	
	pesDbId INTEGER,
	name varchar(50),
	nationality varchar(50),
	region varchar(50),
);
--
-- POSITION Table
CREATE TABLE FIELDPOSITION(
	id INTEGER PRIMARY KEY,		
	code Character(3) NOT NULL,
	description VARCHAR(20)
);
--
--PLAYING STYLE Table
CREATE TABLE PLAYING_STYLE(
	id INTEGER PRIMARY KEY,
	name VARCHAR(50) NOT NULL,
	description VARCHAR(50)
);
--
--LEAGUE Table
CREATE TABLE LEAGUE(
	id INTEGER PRIMARY KEY,
	name VARCHAR(50)
)
--TEAM Table
CREATE TABLE TEAM(
	id INTEGER PRIMARY KEY,
	name VARCHAR(50),
	leagueId INTEGER,
	FOREIGN KEY(leagueId) REFERENCES LEAGUE(id) 
)
--
-- Player in Patch Basic Attributes Table
CREATE TABLE PLAYER_DETAIL(
	patchId INTEGER NOT NULL,
	playerId INTEGER NOT NULL,	
	squatNumber INTEGER,
	team varchar(50),
	league varchar(50),	
	height INTEGER,
	weight INTEGER,
	age INTEGER,
	foot varchar(20),
	condition Character(1),
	positionId INTEGER,
	rating INTEGER,
	playingStyleId INTEGER,
	FOREIGN KEY (patchId) REFERENCES PATCH(id),
	FOREIGN KEY(playerId) REFERENCES PLAYER(id),
	FOREIGN KEY(playingStyleId) REFERENCES PLAYING_STYLE(id),
	FOREIGN KEY(positionId) REFERENCES FIELDPOSITION(id),
	PRIMARY KEY(patchId,playerId)
);
--
-- Scouts for a Player in a Patch
CREATE TABLE SCOUT(
	id INTEGER GENERATED BY DEFAULT AS SEQUENCE SCOUT_SEQUENCE PRIMARY KEY,
	patchId INTEGER NOT NULL,
	playerId INTEGER NOT NULL,
	chance INTEGER NOT NULL,
	scoutLevel INTEGER NOT NULL,
	scout1 VARCHAR(50),
	scout2 VARCHAR(50),
	scout3 VARCHAR(50),	
	FOREIGN KEY (patchId) REFERENCES PATCH(id),
	FOREIGN KEY(playerId) REFERENCES PLAYER(id)
);
--
--Position Table
CREATE TABLE POSITION_RATING(
	patchId INTEGER NOT NULL,
	playerId INTEGER NOT NULL,
	positionId INTEGER NOT NULL,
	rating INTEGER,
	FOREIGN KEY (patchId,playerId) REFERENCES PLAYER_DETAIL(patchId,playerId),
	FOREIGN KEY (positionId) REFERENCES FIELDPOSITION(id),
	PRIMARY KEY(patchId,playerId,positionId)
);
--
--Attribute Table
CREATE TABLE ABILITY_LEVEL(
	patchId INTEGER NOT NULL,
	playerId INTEGER NOT NULL,
	level INTEGER NOT NULL,	
	attackingProwness INTEGER,
	ballControl INTEGER,
	dribbling INTEGER,
	lowPass INTEGER,
	loftedPass INTEGER,
	finishing INTEGER,
	placeKicking INTEGER,
	swerve INTEGER,
	header INTEGER,
	defensiveProwness INTEGER,
	ballWinning INTEGER,
	kickingPower INTEGER,
	speed INTEGER,
	explosivePower INTEGER,
	unwaveringBalance INTEGER,
	physicalContact INTEGER,
	jump INTEGER,
	goalkeeping INTEGER,
	gkcatch INTEGER,
	clearing INTEGER,
	reflexes INTEGER,
	coverage INTEGER,
	stamina INTEGER,
	weakFootUsage INTEGER,
	weakFootAccuracy INTEGER,
	form INTEGER,
	injuryResistance INTEGER,
	rating INTEGER,
	FOREIGN KEY (patchId,playerId) REFERENCES PLAYER_DETAIL(patchId,playerId),
	PRIMARY KEY(patchId,playerId,level)
);